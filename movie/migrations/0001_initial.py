# Generated by Django 2.1.8 on 2019-05-15 10:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('image', models.TextField()),
                ('tmdbid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.Actor')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100)),
                ('score', models.IntegerField(choices=[(0, '0★'), (1, '1★'), (2, '2★'), (3, '3★'), (4, '4★'), (5, '5★'), (6, '6★'), (7, '7★'), (8, '8★'), (9, '9★'), (10, '10★')], default=5)),
                ('dislikeusers', models.ManyToManyField(related_name='dislikecomments', to=settings.AUTH_USER_MODEL)),
                ('likeusers', models.ManyToManyField(related_name='likecomments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('genrenum', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('popularity', models.TextField()),
                ('image', models.TextField()),
                ('original_title', models.TextField()),
                ('original_language', models.TextField()),
                ('release_date', models.IntegerField()),
                ('tmdbrating', models.FloatField(blank=True)),
                ('myrating', models.IntegerField()),
                ('showTm', models.IntegerField()),
                ('overview', models.TextField()),
                ('tmdbid', models.IntegerField()),
                ('video', models.TextField()),
                ('actors', models.ManyToManyField(through='movie.Character', to='movie.Actor')),
                ('genre', models.ManyToManyField(blank=True, related_name='movie', to='movie.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='Popular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.TextField()),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='ispopular',
            field=models.ForeignKey(null=True, on_delete='SET_NULL', to='movie.Popular'),
        ),
        migrations.AddField(
            model_name='comment',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.Movie'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='character',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.Movie'),
        ),
    ]
